@using ExchangeService.Shared.Resources;
@using ExchangeService.Client.Services;
@inject AppState appState
@inject HttpClient Http

<nav class="navbar navbar-expand-lg navbar-dark" style="padding-left:12.5%; padding-right:12.5%; background-color:#003380">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navBarData" aria-controls="navBarData" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <a class="navbar-brand" href="#">Home</a>
    <div class="collapse navbar-collapse" id="navBarData">
        <div class="row">
            <div class="col-sm-1" />
            <div class="col-sm-7">
                <input class="form-control" type="search" placeholder="Game title" aria-label="Search" bind="@Search" />
            </div>
            <div class="col-sm-4">
                <button class="btn btn-outline-primary btn-block" onclick="SearchGames()">Search</button>
            </div>
        </div>
        <ul class="navbar-nav ml-auto">
            @if (!isUserLogged)
            {
                <li class="nav-item">
                    <a class="nav-link" href="/register">Register </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/login">Login</a>
                </li>
            }
            else
            {
                <li class="nav-item dropdown @(isDropdownOpen ? "show" : string.Empty)">
                    <a class="nav-link dropdown-toggle" id="myProfile" data-toggle="dropdown" onclick="@ToggleNavDropdown" aria-haspopup="true" aria-expanded="@(isDropdownOpen ? "true" : "false")">
                        <i class="fas fa-user"></i>
                        @loggedUserName
                    </a>
                    <div class="dropdown-menu @(isDropdownOpen ? "show" : string.Empty)" aria-labelledby="myProfile">
                        <a class="dropdown-item" href="/myprofile">Profile page</a>
                        <a class="dropdown-item" href="/myexchanges">My exchanges</a>
                        <a class="dropdown-item" href="#">My matches</a>
                        <a class="dropdown-item" href="/logout">Log out</a>
                    </div>
                </li>
            }
        </ul>
    </div>
</nav>


@functions {
    bool isDropdownOpen = false;
    bool isUserLogged = false;
    string loggedUserName = "";
    string Search { get; set; } = "";

    void ToggleNavDropdown()
    {
        isDropdownOpen = !isDropdownOpen;
    }

    protected override async Task OnInitAsync()
    {
        if (appState.IsUserLoggedIn)
        {
            var user = await appState.GetMyProfile();
            loggedUserName = user.Name + " " + user.Surname;
            isUserLogged = true;
        }
    }

    private void SearchGames()
    {
        Console.WriteLine("current search: " + Search);
    }
}
