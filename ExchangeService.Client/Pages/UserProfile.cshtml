@using ExchangeService.Shared.Resources;
@using ExchangeService.Client.Services;
@page "/profile/{UserId}"
@inject HttpClient Http
@inject TokenService tokenService

<h1>User profile</h1>

@if (profileOwner == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <img src="@profileOwner.ImageUrl" width="150" height="150">
    <h5>@profileOwner.Name @profileOwner.Surname</h5>
    <h6>! @profileOwner.PickUpLocation</h6>

    @if (profileOwner.Pickup && !profileOwner.Delivery)
    {
        <p>Pickup only</p>
    }
    else if (profileOwner.Delivery && !profileOwner.Pickup)
    {
        <p>Delivery only</p>
    }
    <p>Exchanges made: @profileOwner.ExchangesCount</p>
    <p>Reviews: @profileOwner.ReviewsCount</p>
    <p>STARS @profileOwner.AvgMark</p>

    <button onclick=@(() => ToogleContactDetails())>@contactDetailsButton</button>
    @if (contactDetailsVisible)
    {
        <p>Ikonkatelefonu: @profileOwner.PhoneNumber</p>
        <p>Ikonkamaila: @profileOwner.ContactEmail</p>
    }
    <button onclick=@(() => OfferDeal())>Offer a deal</button>

    <table>
        <thead>
            <tr>
                <th>Games for exchange</th>
            </tr>
        </thead>
        @for (int i = 0; i < userGames.Count(); i++)
        {
            <tr>
                <td><img src="@userGames[i].ImageUrl" width="100" height="100" /></td>
                <td>@userGames[i].Title</td>
            </tr>
        }
    </table>

    <table>
        <thead>
            <tr>
                <th>Game searches</th>
            </tr>
        </thead>

        @for (int i = 0; i < userSearchGames.Count(); i++)
        {
            <tr>
                <td><img src="@userSearchGames[i].ImageUrl" width="100" height="100" /></td>
                <td>@userSearchGames[i].Title</td>
            </tr>
        }
    </table>

    @if (comments.Count() > 0)
    {
        <table>
            <thead>
                <tr>
                    <th>Rewiews</th>
                </tr>
            </thead>

            @for (int i = 0; i < comments.Count(); i++)
            {
                <tr>
                    <td>@comentators[i].Name @comentators[i].Surname</td>
                    <td><img src="@comentators[i].ImageUrl" width="50" height="50" /></td>
                    <td>@comments[i].CommentDate</td>
                    <td>@comments[i].Mark</td>
                    <td>@comments[i].Text</td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>This user has no reviews</p>
    }
}


@functions {
[Parameter]
string UserId { get; set; }

UserView profileOwner;
CommentDto[] comments = new CommentDto[] { };
List<UserView> comentators = new List<UserView>() { };
UserGameView[] userGames = new UserGameView[] { };
UserSearchGameView[] userSearchGames = new UserSearchGameView[] { };
bool contactDetailsVisible = false;
string contactDetailsButton = "Show contact details";


protected override async Task OnInitAsync()
{
    var token = await tokenService.GetAccessToken();
    Http.DefaultRequestHeaders.Add("Authorization", String.Format("Bearer {0} ", token));

    int profileOwnersId = Int32.Parse(UserId);
    profileOwner = await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/" + profileOwnersId);

    var result = await Http.GetJsonAsync<IEnumerable<CommentDto>>("http://localhost:5000/api/users/comments/" + profileOwnersId);
    if (result.Count() > 0) await FillComents(result.ToArray());

    var toExchange = await Http.GetJsonAsync<IEnumerable<UserGameView>>("http://localhost:5000/api/users/games/" + profileOwnersId);
    userGames = toExchange.ToArray();
    var forSearch = await Http.GetJsonAsync<IEnumerable<UserSearchGameView>>("http://localhost:5000/api/users/searches/" + profileOwnersId);
    userSearchGames = forSearch.ToArray();
}

private async Task FillComents(CommentDto[] dbComments)
{
    comments = dbComments;
    foreach (var comment in comments)
    {
        comentators.Add(await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/" + comment.LeavingUserId));
    }
}

private void ToogleContactDetails()
{
    if (contactDetailsVisible)
    {
        contactDetailsVisible = false;
        contactDetailsButton = "Show contact details";
    }
    else
    {
        contactDetailsVisible = true;
        contactDetailsButton = "Hide contact details";
    }
}

private void OfferDeal()
{
    // redirect to exchange page with both user ids
}

}
