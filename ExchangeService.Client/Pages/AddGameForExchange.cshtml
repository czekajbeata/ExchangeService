@using ExchangeService.Shared.Resources;
@using ExchangeService.Shared.Enums;
@using ExchangeService.Client.Services;
@using System.Linq;
@page "/addexchangegame"
@inject HttpClient Http
@inject TokenService tokenService
@inject AppState appState
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<h1>Add game for exchange</h1>
<br />
<GamesListDetails OnSubmit="SaveDetails" gameDetails="Game" ItemChanged="@SetGameDtoCallback">
    <button type="submit" class="btn btn-primary" disabled="@(Game == null)">
        Save game details
    </button>
</GamesListDetails>
<br /><br />
@if (newUserGame != null)
{
    <ValidateUserGame OnSubmit="AddUserGame" UserGame="newUserGame" Pictures="pictures">
        <div class="row">
            <button type="submit" class="btn btn-primary">Add game for exchange</button>
        </div>
    </ValidateUserGame>
}

@functions {

    public GameDto Game { get; set; } = null;
    GameDto gameDetails = null;
    UserGameDto newUserGame = null;
    List<string> pictures = new List<string>();

    protected override void OnInit()
    {
        appState.TrySetAccessTokens();
        if (!appState.IsUserLoggedIn)
        {
            UriHelper.NavigateTo("/unauthorized");
        }
    }

    private async Task SaveDetails(UIEventArgs args)
    {
        await Task.Run(() =>
        {
            newUserGame = new UserGameDto()
            {
                GameId = Game.GameId
            };
        });
        StateHasChanged();
    }

    private void SetGameDtoCallback(GameDto game)
    {
        this.Game = game;
        StateHasChanged();
    }

    private async Task AddUserGame(UIEventArgs args)
    {
        newUserGame.UserImages = pictures.ToArray();
        var canAddGame = await Http.GetJsonAsync<bool>("http://localhost:5000/api/games/check/" + Game.GameId);
        if (canAddGame)
        {
            await Http.PostJsonAsync("http://localhost:5000/api/users/games/", newUserGame);
            UriHelper.NavigateTo("/gameexchangesuccess");
        }
        else
            UriHelper.NavigateTo("/addforexchangefail");
    }
}
