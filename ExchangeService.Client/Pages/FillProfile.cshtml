@using ExchangeService.Shared.Resources;
@using ExchangeService.Client.Services;
@using ExchangeService.Client.Pages.Components;
@using System.Text.RegularExpressions;
@page "/fillprofile"
@inject HttpClient Http
@inject TokenService tokenService
@inject ReloadService reloadService
@inject AppState appState
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inherits ProfileBase

<h2>Thank you for registering!</h2>
<h3>Plese provide additional details before you get started:</h3>
<br />
<form>
    <div class="form-group row">
        <label for="picture" class="col-sm-3 col-form-label">Profile picture url</label>
        <div class="col-sm-4">
            <input type="text" name="picture" placeholder="PictureUrl" class="form-control" bind="@UserProfile.ImageUrl" />
        </div>
    </div>
    <div class="form-group row">
        <label for="name" class="col-sm-3 col-form-label">Name</label>
        <div class="col-sm-4">
            <input type="text" name="name" placeholder="Name" class="form-control" bind="@UserProfile.Name" />
        </div>
    </div>
    <div class="form-group row">
        <label for="surname" class="col-sm-3 col-form-label">Surname</label>
        <div class="col-sm-4">
            <input type="text" name="surname" placeholder="Surname" class="form-control" bind="@UserProfile.Surname" />
        </div>
    </div>
    <div class="form-group row">
        <label for="location" class="col-sm-3 col-form-label">Location</label>
        <div class="col-sm-4">
            <input type="text" name="location" placeholder="Location" class="form-control" bind="@UserProfile.Location" />
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-3 col-form-label">Contact email</label>
        <div class="col-sm-4">
            <input type="text" name="email" placeholder="Contact email" class="form-control" bind="@UserProfile.ContactEmail" />
        </div>
    </div>
    <div class="form-group row">
        <label for="number" class="col-sm-3 col-form-label">Phone number</label>
        <div class="col-sm-4">
            <input type="text" name="number" placeholder="Phone number" class="form-control" bind="@UserProfile.PhoneNumber" />
        </div>
    </div>
    @if (Errors.Count() > 0)
    {
        <br />
        <div class="alert alert-danger" role="alert">
            <br />
            @foreach (var error in Errors)
            {
                <p class="font-italic">@error</p>
            }
        </div>
    }
    <div class="row">
        <div class="col-sm-3">
            <button type="button" class="btn btn-primary btn-block" onclick="@SubmitForm">Create profile</button>
        </div>
    </div>
</form>

@functions{
    protected override async Task OnInitAsync()
    {
        appState.TrySetAccessTokens();
        if (!appState.IsUserLoggedIn)
        {
            UriHelper.NavigateTo("/unauthorized");
        }
        else
        {
            var profileExists = await Http.GetJsonAsync<bool>("http://localhost:5000/api/users/profile");
            if (profileExists)
            {
                UriHelper.NavigateTo("/edit");
            }
        }
    }

    private async Task SubmitForm()
    {
        Errors.Clear();
        ValidateInputs();
        if (IsValid)
        {
            if (UserProfile.ImageUrl == null)
                UserProfile.ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png";

            await Http.PostJsonAsync("http://localhost:5000/api/users/profile", UserProfile);
            if (await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/myprofile") != null)
            {
                await reloadService.ReloadPage();
                UriHelper.NavigateTo("/myprofile");
            }
        }
    }
}
