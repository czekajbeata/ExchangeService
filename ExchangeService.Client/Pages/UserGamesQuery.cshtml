@using ExchangeService.Shared.Resources;
@using ExchangeService.Client.Services;
@page "/games/{GameId}"
@inject HttpClient Http
@inject TokenService tokenService
@inject AppState appState
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

@if (userGames == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>Users games for @userGames[0].Title</h1>
    <br />

    <div class="container">

        <table class="table table-striped">
            <thead>
                <tr>
                    <th style="width: 20%">Game</th>
                    <th style="width: 13%">State</th>
                    <th style="width: 13%">Is complete</th>
                    <th style="width: 13%">Shipment</th>
                    <th style="width: 26%">User</th>
                    <th style="width: 10%"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var gameRow in userGames)
                {
                    <tr>
                        <td>
                            <div class="row">
                                <div class="col-sm-6">
                                    <img src="@gameRow.ImageUrl" width="80" height="80" />
                                </div>
                                <div class="col-sm-4">
                                    <div class="row">
                                        <i class="fas fa-users"></i>
                                        @gameRow.PlayerCount
                                    </div>
                                    <div class="row">
                                        <i class="fas fa-clock"></i>
                                        @gameRow.GameTimeInMin
                                    </div>
                                    <div class="row">
                                        @gameRow.MinAgeRequired +
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td>@gameRow.State</td>
                        <td>@gameRow.IsComplete</td>
                        <td>@gameRow.Shipment</td>
                        <td>
                            <div class="row">
                                <div class="col-sm-6">
                                    <img src="@gameRow.UserImageUrl" width="80" height="80" />
                                </div>
                                <div class="col-sm-4">
                                    <div class="row">
                                        @gameRow.Name @gameRow.Surname
                                    </div>
                                    <div class="row">
                                        <i class="fas fa-map-marker-alt" /> @gameRow.Location
                                    </div>
                                    <div class="row">
                                        Avg mark: @gameRow.AvgMark
                                    </div>
                                </div>
                            </div>

                        </td>
                        <td>
                            <button type="button" class="btn btn-primary btn-block" onclick="@(() => GetDetails(gameRow))">Details</button>
                            <button type="button" class="btn btn-primary btn-block" onclick="@(() => OfferDeal(gameRow))">Offer a deal</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@functions {
    [Parameter]
    string GameId { get; set; }
    GameAndUserView[] userGames;

    protected override async Task OnInitAsync()
    {
        appState.TrySetAccessTokens();
        var usergames = await Http.GetJsonAsync<IEnumerable<GameAndUserView>>("http://localhost:5000/api/usergames/" + GameId);
        userGames = usergames.ToArray();
        if(userGames == null || !(userGames.Count() > 0))
        {
            UriHelper.NavigateTo($"/usergamesfail");
        }
    }

    private void GetDetails(GameAndUserView row)
    {
        UriHelper.NavigateTo($"/exchangegame/{row.UserGameId}");
    }

    private void OfferDeal(GameAndUserView row)
    {
        UriHelper.NavigateTo($"/offerdeal/{row.UserId}");
    }

}
