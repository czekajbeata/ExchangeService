@using ExchangeService.Shared.Resources;
@using ExchangeService.Client.Services;
@page "/games/{GameId}"
@inject HttpClient Http
@inject TokenService tokenService
@inject AppState appState
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

@if (games == null)
{
<p><em>Loading...</em></p>
}
else
{
<h1>Users games for @games[0].Title</h1>
<br />

<div class="container">

    <table class="table table-striped">
        <thead>
            <tr>
                <th style="width: 20%">Game</th>
                <th style="width: 10%">State</th>
                <th style="width: 15%">Is complete</th>
                <th style="width: 15%">Shipment</th>
                <th style="width: 25%">User</th>
                <th style="width: 10%"></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var gameRow in games)
                        {
            <tr>
                <td>
                    <div class="row justify-content-center">
                        <div class="col-sm-8">
                            <img src="@gameRow.ImageUrl" width="80" height="80" />
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <i class="fas fa-users"></i>
                                @gameRow.PlayerCount
                            </div>
                            <div class="row">
                                <i class="fas fa-clock"></i>
                            </div>
                            <div class="row">
                                @gameRow.MinAgeRequired +
                            </div>
                        </div>
                    </div>
                </td>
                <td>@gameRow.State</td>
                <td>@gameRow.IsComplete</td>
                <td>@gameRow.Shipment</td>
                <td>profile details</td>
                <td>
                    <button type="button" class="btn btn-primary btn-block" >Details</button>
                    <button type="button" class="btn btn-primary btn-block" >Offer a deal</button>

                    @*buttons : details & offeradeal -> give entire row from oreach to method*@
                </td>
            </tr>
                        }
        </tbody>
    </table>



</div>
}


@functions {
    [Parameter]
    string GameId { get; set; }
    UserGameView[] games;
    UserView[] users;


    protected override async Task OnInitAsync()
    {
        appState.TrySetAccessTokens();
        var usergames = await Http.GetJsonAsync<IEnumerable<UserGameView>>("http://localhost:5000/api/usergames/" + GameId);
// if is null -> redirect to information page "no exchanges offered for this game"
        games = usergames.ToArray();
        await FillUsers();
    }

    private async Task FillUsers()
    {
        var gameOwners = new List<UserView>();
        foreach(var game in games)
        {
            var owner = await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/" + game.UserId);
            gameOwners.Add(owner);
        }
        users = gameOwners.ToArray();
    }

}
