@using ExchangeService.Shared.Resources
@using ExchangeService.Shared.Enums;
@using ExchangeService.Client.Services;
@page "/editableexchangegame/{UserGameId}"
@inject HttpClient Http
@inject TokenService tokenService
@inject AppState appState
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<h1>Edit game for exchange</h1>
<br />

<div class="container">
    <div class="row">
        <div class="col-sm-3">
            <div class="row justify-content-center">
                <img src="@gameOwner.ImageUrl" width="150" height="150">
            </div>
            <div class="row justify-content-center">
                <p class="font-weight-bold">@gameOwner.Name @gameOwner.Surname</p>
            </div>
            <div class="form-group row">
                <div class="col-sm-2">
                    <i class="fas fa-map-marker-alt" style="font-size: 18px"></i>
                </div>
                <div class="col-sm-10">
                    <p class="font-weight-normal">@gameOwner.Location</p>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-9">
                    <p class="font-weight-normal">Exchanges made:</p>
                </div>
                <div class="col-sm-3">
                    @gameOwner.ExchangesCount
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-9">
                    <p class="font-weight-normal">Reviews:</p>
                </div>
                <div class="col-sm-3">
                    @gameOwner.ReviewsCount
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-9">
                    <p class="font-weight-normal">Average mark:</p>
                </div>
                <div class="col-sm-3">
                    @gameOwner.AvgMark
                </div>
            </div>

            <button type="button" class="btn btn-primary btn-block" onclick=@(() => ToogleContactDetails())>@contactDetailsButton</button>
            @if (contactDetailsVisible)
            {
                <br />
                <div class="form-group row">
                    <div class="col-sm-2">
                        <span class="fas fa-phone" style="font-size: 24px"></span>
                    </div>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" bind="@gameOwner.PhoneNumber" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        <span class="fas fa-envelope" style="font-size: 24px"></span>
                    </div>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" bind="@gameOwner.ContactEmail" />
                    </div>
                </div>
            }
        </div>

        <div class="col-sm-9">
            <div class="row">
                <div class="col-sm-8">
                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-normal">Genre: </p>
                        </div>
                        <div class="col-sm-4">
                            <p class="font-italic">@gameView.GenreName</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-normal">Player count: </p>
                        </div>
                        <div class="col-sm-4">
                            <p class="font-italic">@gameView.PlayerCount</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-normal">Age required: </p>
                        </div>
                        <div class="col-sm-4">
                            <p class="font-italic">@gameView.MinAgeRequired</p>
                        </div>
                    </div>                    
                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-normal">Game time (in minutes): </p>
                        </div>
                        <div class="col-sm-4">
                            <p class="font-italic">@gameView.GameTimeInMin</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-normal">Publisher: </p>
                        </div>
                        <div class="col-sm-4">
                            <p class="font-italic">@gameView.Publisher</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-normal">PublishDate: </p>
                        </div>
                        <div class="col-sm-4">
                            <p class="font-italic">@gameView.PublishDate</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-normal">Description: </p>
                        </div>
                        <div class="col-sm-4">
                            <p class="font-italic">@gameView.Description</p>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="row justify-content-center">
                        <img src="@gameView.ImageUrl" width="200" height="200">
                    </div>
                    <div class="row justify-content-center">
                        <p class="font-weight-bold">@gameView.Title</p>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-8">
                    <form>
                        <div class="form-group row">
                            <label for="shipment" class="col-sm-6 col-form-label"> Shipment type: </label>
                            <div class="col-sm-6">
                                <select bind="@gameView.Shipment" class="form-control">
                                    @foreach (var shipmentType in Enum.GetValues(typeof(Shipment)))
                                    {
                                        <option value="@shipmentType">@shipmentType</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="isComplete" class="col-sm-6 col-form-label"> Is this game complete: </label>
                            <div class="col-sm-6">
                                <input type="checkbox" class="form-control" id="isComplete" placeholder="false" bind="@gameView.IsComplete" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="gameState" class="col-sm-6 col-form-label"> Game state: </label>
                            <div class="col-sm-6">
                                <select bind="@gameView.State" class="form-control">
                                    @foreach (var gameState in Enum.GetValues(typeof(GameState)))
                                    {
                                        <option value="@gameState">@gameState</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="stateDescription" class="col-sm-6 col-form-label"> State description: </label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="stateDescription" placeholder="Description of game state" bind="@gameView.UserGameDescription" />
                            </div>
                        </div>
                        <button type="button" class="btn btn-primary" onclick=@(async () => await UpdateUserGameDetails())>Update details</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    [Parameter]
    string UserGameId { get; set; }
    UserGameView gameView { get; set; } = new UserGameView();
    UserView gameOwner { get; set; } = new UserView();
    bool contactDetailsVisible = false;
    string contactDetailsButton = "Show contact details";

    protected override async Task OnInitAsync()
    {
        appState.TrySetAccessTokens();
        gameView = await Http.GetJsonAsync<UserGameView>("http://localhost:5000/api/users/game/" + UserGameId);
        gameOwner = await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/myprofile");
        if(gameOwner.UserId != gameView.UserId)
        {
            UriHelper.NavigateTo("/gameeditfail");
        }
    }

    private void ToogleContactDetails()
    {
        if (contactDetailsVisible)
        {
            contactDetailsVisible = false;
            contactDetailsButton = "Show contact details";
        }
        else
        {
            contactDetailsVisible = true;
            contactDetailsButton = "Hide contact details";
        }
    }

    private async Task UpdateUserGameDetails()
    {
        UserGameDto updatedUserGame = new UserGameDto
        {
            State = gameView.State,
            IsComplete = gameView.IsComplete,
            Shipment = gameView.Shipment,
            UserGameDescription = gameView.UserGameDescription
        };
        await Http.PutJsonAsync("http://localhost:5000/api/users/games/", updatedUserGame);
        UriHelper.NavigateTo("/gameupdatedsuccess");
    }

}
