@using ExchangeService.Shared.Resources;
@using ExchangeService.Shared.Enums;
@using ExchangeService.Client.Services;
@page "/offerdeal/{UserId}"
@inject HttpClient Http
@inject TokenService tokenService
@inject AppState appState
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<h1>Offer an exchange</h1>
<br />

@if (myProfile == null || otherUser == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div style="min-height:65vh">
        @if (visiblePageNumber == 1)
        {
            <div class="container">
                <h3>1. Select games</h3>
                <div class="row">
                    <div class="col-sm-3">
                        <div class="alert alert-secondary" role="alert">
                            <div class="row justify-content-center">
                                <img src="@myProfile.ImageUrl" width="150" height="150">
                            </div>
                            <div class="row justify-content-center">
                                <p class="font-weight-bold">@myProfile.Name @myProfile.Surname</p>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-2">
                                    <i class="fas fa-map-marker-alt" style="font-size: 18px"></i>
                                </div>
                                <div class="col-sm-10">
                                    <p class="font-weight-normal">@myProfile.Location</p>
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Exchanges made:</p>
                                </div>
                                <div class="col-sm-3">
                                    @myProfile.ExchangesCount
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Reviews:</p>
                                </div>
                                <div class="col-sm-3">
                                    @myProfile.ReviewsCount
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Average mark:</p>
                                </div>
                                <div class="col-sm-3">
                                    @myProfile.AvgMark
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        @foreach (var myGame in myGames)
                        {
                            <input type="checkbox" checked="@(myGamesIds.Contains(myGame.GameId))" onchange="@(() => ToogleMyGamesForExchange(myGame))" />@myGame.Title <br />
                        }
                    </div>
                    <div class="col-sm-3">
                        @foreach (var otherGame in otherGames)
                        {
                            <input type="checkbox" checked="@(otherGamesIds.Contains(otherGame.GameId))" onchange="@(() => ToogleOtherGamesForExchange(otherGame))" />@otherGame.Title <br />
                        }
                    </div>
                    <div class="col-sm-3">
                        <div class="alert alert-secondary" role="alert">
                            <div class="row justify-content-center">
                                <img src="@otherUser.ImageUrl" width="150" height="150">
                            </div>
                            <div class="row justify-content-center">
                                <p class="font-weight-bold">@otherUser.Name @otherUser.Surname</p>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-2">
                                    <i class="fas fa-map-marker-alt" style="font-size: 18px"></i>
                                </div>
                                <div class="col-sm-10">
                                    <p class="font-weight-normal">@otherUser.Location</p>
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Exchanges made:</p>
                                </div>
                                <div class="col-sm-3">
                                    @otherUser.ExchangesCount
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Reviews:</p>
                                </div>
                                <div class="col-sm-3">
                                    @otherUser.ReviewsCount
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Average mark:</p>
                                </div>
                                <div class="col-sm-3">
                                    @otherUser.AvgMark
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br /><br />
                <div class="row">
                    <div class="col-sm-9" />
                    <div class="col-sm-3">
                        @if (myGamesIds.Count() > 0 && otherGamesIds.Count() > 0)
                        {
                            <button type="button" class="btn btn-primary btn-block" onclick=@(() => MoveToNext())>Next</button>
                        }
                    </div>
                </div>
            </div>
        }

        @if (visiblePageNumber == 2)
        {
            <div class="container">
                <h3>2. Choose shippment type</h3>
                <form action="">
                    <input type="radio" name="shipping" onchange="@(() => { isPickup = true; isDelivery = false; })" checked="@isPickup" /> PickUp <br>
                    <input type="radio" name="shipping" onchange="@(() => { isDelivery = true; isPickup = false; })" checked="@isDelivery" /> Delivery <br>
                </form>
                <br /><br />
                <div class="row">
                    <div class="col-sm-3">
                        <button type="button" class="btn btn-primary btn-block" onclick=@(() => MoveToPrevious())>Previous</button>
                    </div>
                    <div class="col-sm-6" />
                    <div class="col-sm-3">
                        @if (isDelivery || isPickup)
                        {
                            <button type="button" class="btn btn-primary btn-block" onclick=@(() => MoveToNext())>Next</button>
                        }
                    </div>
                </div>
            </div>
        }

        @if (visiblePageNumber == 3)
        {
            <div class="container">
                @if (isDelivery)
                {
                    <h3>3. Provide address for package delivery</h3>
                    <input class="form-control  input-lg" type="text" placeholder="Delivery details..." bind="@firstUserContactInfo" />
                }
                else
                {
                    <h3>3. Provide contact details to discuss the pickup</h3>
                    <input class="form-control" type="text" placeholder="Contact details..." bind="@firstUserContactInfo" />
                }
                <br /><br />
                <div class="row">
                    @if (!string.IsNullOrEmpty(contactDetailsError))
                    {
                        <div class="col-sm-12">
                            <div class="alert alert-danger" role="alert">
                                <br />
                                <p class="font-italic">@contactDetailsError</p>
                            </div>
                            <br />
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-sm-3">
                        <button type="button" class="btn btn-primary btn-block" onclick=@(() => MoveToPrevious())>Previous</button>
                    </div>
                    <div class="col-sm-6" />
                    <div class="col-sm-3">
                        <button type="button" class="btn btn-primary btn-block" onclick=@(() => ShowSummary())>Show summary</button>
                    </div>
                </div>
            </div>
        }

        @if (visiblePageNumber == 4)
        {

            <div class="container">
                <h3>4. Exchange summary</h3>
                <div class="row">
                    <div class="col-sm-3">
                        <div class="alert alert-secondary" role="alert">
                            <div class="row justify-content-center">
                                <img src="@myProfile.ImageUrl" width="150" height="150">
                            </div>
                            <div class="row justify-content-center">
                                <p class="font-weight-bold">@myProfile.Name @myProfile.Surname</p>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-2">
                                    <i class="fas fa-map-marker-alt" style="font-size: 18px"></i>
                                </div>
                                <div class="col-sm-10">
                                    <p class="font-weight-normal">@myProfile.Location</p>
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Exchanges made:</p>
                                </div>
                                <div class="col-sm-3">
                                    @myProfile.ExchangesCount
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Reviews:</p>
                                </div>
                                <div class="col-sm-3">
                                    @myProfile.ReviewsCount
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Average mark:</p>
                                </div>
                                <div class="col-sm-3">
                                    @myProfile.AvgMark
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="alert alert-secondary" style="background-color:#f2f2f3" role="alert">
                            <div class="row justify-content-center">
                                <div class="col-sm-6">
                                    <p class="font-weight-bold"> Games you give away: </p>
                                    @foreach (var gameId in exchange.MyGamesIds)
                                    {
                                        <p>@myGames.SingleOrDefault(g => g.GameId == Int32.Parse(gameId)).Title</p>
                                    }
                                </div>
                                <div class="col-sm-6">
                                    <p class="font-weight-bold"> Games you get: </p>
                                    @foreach (var gameId in exchange.OtherUserGamesIds)
                                    {
                                        <p>@otherGames.SingleOrDefault(g => g.GameId == Int32.Parse(gameId)).Title</p>
                                    }
                                </div>
                            </div>
                            <br /><br />
                            <div class="row justify-content-center">
                                <div class="col-sm-6">
                                    <p class="font-weight-bold">Type of exchange: </p>
                                    <p>@exchange.Shipment</p>
                                </div>
                                <div class="col-sm-6">
                                    @if (exchange.Shipment == Shipment.Delivery)
                                    {
                                        <p class="font-weight-bold">Your delivery adress:</p>
                                    }
                                    else
                                    {
                                        <p class="font-weight-bold">Your contact details:</p>
                                    }
                                    <p class="font-italic">@firstUserContactInfo</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="alert alert-secondary" role="alert">
                            <div class="row justify-content-center">
                                <img src="@otherUser.ImageUrl" width="150" height="150">
                            </div>
                            <div class="row justify-content-center">
                                <p class="font-weight-bold">@otherUser.Name @otherUser.Surname</p>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-2">
                                    <i class="fas fa-map-marker-alt" style="font-size: 18px"></i>
                                </div>
                                <div class="col-sm-10">
                                    <p class="font-weight-normal">@otherUser.Location</p>
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Exchanges made:</p>
                                </div>
                                <div class="col-sm-3">
                                    @otherUser.ExchangesCount
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Reviews:</p>
                                </div>
                                <div class="col-sm-3">
                                    @otherUser.ReviewsCount
                                </div>
                            </div>
                            <div class="row" style="padding:4px">
                                <div class="col-sm-9">
                                    <p class="font-weight-normal">Average mark:</p>
                                </div>
                                <div class="col-sm-3">
                                    @otherUser.AvgMark
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br /><br />
                <div class="row">
                    <div class="col-sm-3">
                        <button type="button" class="btn btn-primary btn-block" onclick=@(() => MoveToPrevious())>Previous</button>
                    </div>
                    <div class="col-sm-6" />
                    <div class="col-sm-3">
                        <button type="button" class="btn btn-success btn-block" onclick=@(async () => await OfferAnExchange())>Offer an exchange</button>
                    </div>
                </div>
            </div>
        }
        <br />
    </div>
    <div class="col-sm-3">
        <button type="button" class="btn btn-outline-danger btn-block" onclick=@(() => AbandonExchange())>Abandon exchange</button>
    </div>
}

@functions {
[Parameter]
string UserId { get; set; }

ExchangeDto exchange;
UserView myProfile;
UserView otherUser;
UserGameView[] myGames;
UserGameView[] otherGames;
int visiblePageNumber = 1;
List<int> myGamesIds = new List<int>();
List<int> otherGamesIds = new List<int>();
bool isPickup;
bool isDelivery;
string contactDetailsError = "";

string firstUserContactInfo;

protected override async Task OnInitAsync()
{
    appState.TrySetAccessTokens();
    if (!appState.IsUserLoggedIn)
    {
        UriHelper.NavigateTo("/unauthorized");
    }
    myProfile = await appState.GetMyProfile();
    int otherUserId = Int32.Parse(UserId);
    otherUser = await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/" + otherUserId);

    var mine = await Http.GetJsonAsync<IEnumerable<UserGameView>>("http://localhost:5000/api/users/games/" + myProfile.UserId);
    myGames = mine.ToArray();
    var other = await Http.GetJsonAsync<IEnumerable<UserGameView>>("http://localhost:5000/api/users/games/" + otherUser.UserId);
    otherGames = other.ToArray();
    exchange = new ExchangeDto();
}

private void MoveToNext()
{
    visiblePageNumber++;
}

private void MoveToPrevious()
{
    visiblePageNumber--;
}

private async Task OfferAnExchange()
{
    string offering = exchange.MyGamesIds.Count() > 1 ? string.Join(",", exchange.MyGamesIds) : exchange.MyGamesIds[0].ToString();
    string others = exchange.OtherUserGamesIds.Count() > 1 ? string.Join(",", exchange.OtherUserGamesIds) : exchange.OtherUserGamesIds[0].ToString();
    await Http.PostJsonAsync("http://localhost:5000/api/users/exchanges", exchange);
    UriHelper.NavigateTo("/exchangeoffersuccess");
}

private void AbandonExchange()
{
    UriHelper.NavigateTo("/exchangeofferabandon");
}

private void ShowSummary()
{
    contactDetailsError = string.Empty;
    if (string.IsNullOrEmpty(firstUserContactInfo))
    {
        contactDetailsError = "Please provide details for other user.";
    }
    else
    {
        exchange.OtherUserId = Int32.Parse(UserId);
        MoveToNext();
        SetUpGames();
        SetUpShippment();
    }
}

private void SetUpGames()
{
    exchange.MyGamesIds = myGamesIds.Select(g => g.ToString()).ToArray();
    exchange.OtherUserGamesIds = otherGamesIds.Select(g => g.ToString()).ToArray();
}

private void SetUpShippment()
{
    if (isPickup)
        exchange.Shipment = Shipment.Pickup;
    else
        exchange.Shipment = Shipment.Delivery;
    exchange.MyContactInfo = firstUserContactInfo;
}

private void ToogleMyGamesForExchange(UserGameView game)
{
    if (myGamesIds.Contains(game.GameId))
        myGamesIds.Remove(game.GameId);
    else
        myGamesIds.Add(game.GameId);
    StateHasChanged();
}

private void ToogleOtherGamesForExchange(UserGameView game)
{
    if (otherGamesIds.Contains(game.GameId))
        otherGamesIds.Remove(game.GameId);
    else
        otherGamesIds.Add(game.GameId);
    StateHasChanged();
}
}

