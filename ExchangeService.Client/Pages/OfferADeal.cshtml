@using ExchangeService.Shared.Resources;
@page "/offerdeal/{UserId}"
@inject HttpClient Http

<h5>Offer an exchange</h5>

@if (myProfile == null || otherUser == null)
{
<p><em>Loading...</em></p>
}
else
{
@if(visiblePageNumber == 1)
{
<table>
    <tbody>
        <tr>
            <td>
                <img src="@myProfile.ImageUrl" width="150" height="150">
                <h5>@myProfile.Name @myProfile.Surname</h5>
                <h6>! @myProfile.PickUpLocation</h6>
                @if (myProfile.Pickup && !myProfile.Delivery)
                {
                <p>Pickup only</p>
                }
                else if (myProfile.Delivery && !myProfile.Pickup)
                {
                <p>Delivery only</p>
                }
                <p>Exchanges made: @myProfile.ExchangesCount</p>
                <p>Reviews: @myProfile.ReviewsCount</p>
                <p>STARS @myProfile.AvgMark</p>
            </td>
            <td>
                @foreach(var game in myGames)
                {
                <input type="checkbox" name="game.Title" value="game.GameId">@game.Title  <br />
                }
            </td>
            <td>
                |
            </td>
            <td>
                @foreach(var game in otherGames)
                {
                <input type="checkbox" name="game.Title" value="game.GameId">@game.Title  <br />
                }
            </td>
            <td>
                <img src="@otherUser.ImageUrl" width="150" height="150">
                <h5>@otherUser.Name @otherUser.Surname</h5>
                <h6>! @otherUser.PickUpLocation</h6>
                @if (otherUser.Pickup && !otherUser.Delivery)
                {
                <p>Pickup only</p>
                }
                else if (otherUser.Delivery && !otherUser.Pickup)
                {
                <p>Delivery only</p>
                }
                <p>Exchanges made: @otherUser.ExchangesCount</p>
                <p>Reviews: @otherUser.ReviewsCount</p>
                <p>STARS @otherUser.AvgMark</p>
            </td>
        </tr>
    </tbody>
</table>
<button onclick=@(() => MoveToNext())>Next</button>
}

@if(visiblePageNumber == 2)
{
<p>second page</p>
<button onclick=@(() => MoveToPrevious())>Previous</button>
<button onclick=@(() => MoveToNext())>Next</button>
}

@if(visiblePageNumber == 3)
{
<p>third page</p>
<button onclick=@(() => MoveToPrevious())>Previous</button>
<button onclick=@(() => MoveToNext())>Next</button>
}

@if(visiblePageNumber == 4)
{
<p>fourth page</p>
<button onclick=@(() => MoveToPrevious())>Previous</button>
<button onclick=@(() => MoveToNext())>Next</button>
}
}






@functions {
    [Parameter]
    string UserId { get; set; }

    UserView myProfile;
    UserView otherUser;
    UserGameView[] myGames;
    UserGameView[] otherGames;
    int visiblePageNumber = 1;

    protected override async Task OnInitAsync()
    {
        myProfile = await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/myprofile");
        int otherUserId = Int32.Parse(UserId);
        otherUser = await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/" + otherUserId);

        var mine = await Http.GetJsonAsync<IEnumerable<UserGameView>>("http://localhost:5000/api/users/games/" + myProfile.UserId);
        myGames = mine.ToArray();

        var other = await Http.GetJsonAsync<IEnumerable<UserGameView>>("http://localhost:5000/api/users/games/" + otherUser.UserId);
        otherGames = other.ToArray();
    }

    private void MoveToNext()
    {
        visiblePageNumber++;
    }

    private void MoveToPrevious()
    {
        visiblePageNumber--;
    }
}

