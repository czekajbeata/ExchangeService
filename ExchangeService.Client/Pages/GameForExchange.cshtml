@using ExchangeService.Shared.Resources;
@using ExchangeService.Client.Services;
@page "/exchangegame/{UserGameId}"
@inject HttpClient Http
@inject TokenService tokenService
@inject AppState appState
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<h1>@GameView.Title</h1>
<br />

<div class="container">
    <div class="row">
        <div class="col-sm-3">
            <div class="alert alert-secondary" role="alert">
                <div class="row justify-content-center">
                    <img src="@gameOwner.ImageUrl" width="150" height="150">
                </div>
                <div class="row justify-content-center">
                    <p class="font-weight-bold">@gameOwner.Name @gameOwner.Surname</p>
                </div>
                <div class="row" style="padding:4px">
                    <div class="col-sm-2">
                        <i class="fas fa-map-marker-alt" style="font-size: 18px"></i>
                    </div>
                    <div class="col-sm-10">
                        <p class="font-weight-normal">@gameOwner.Location</p>
                    </div>
                </div>
                <div class="row" style="padding:4px">
                    <div class="col-sm-9">
                        <p class="font-weight-normal">Exchanges made:</p>
                    </div>
                    <div class="col-sm-3">
                        @gameOwner.ExchangesCount
                    </div>
                </div>
                <div class="row" style="padding:4px">
                    <div class="col-sm-9">
                        <p class="font-weight-normal">Reviews:</p>
                    </div>
                    <div class="col-sm-3">
                        @gameOwner.ReviewsCount
                    </div>
                </div>
                <div class="row" style="padding:4px">
                    <div class="col-sm-9">
                        <p class="font-weight-normal">Average mark:</p>
                    </div>
                    <div class="col-sm-3">
                        @gameOwner.AvgMark
                    </div>
                </div>

                <button type="button" class="btn btn-primary btn-block" onclick=@(() => ToogleContactDetails())>@contactDetailsButton</button>
                @if (contactDetailsVisible)
                {
                    <br />
                    <div class="row" style="padding:4px">
                        <div class="col-sm-2">
                            <span class="fas fa-phone" style="font-size: 24px"></span>
                        </div>
                        <div class="col-sm-10">
                            <p class="font-weight-normal">@gameOwner.PhoneNumber</p>
                        </div>
                    </div>
                    <div class="row" style="padding:4px">
                        <div class="col-sm-2">
                            <span class="fas fa-envelope" style="font-size: 24px"></span>
                        </div>
                        <div class="col-sm-10">
                            <p class="font-weight-normal">@gameOwner.ContactEmail</p>
                        </div>
                    </div>
                }
                <button type="button" class="btn btn-primary btn-block" onclick=@(() => VisitProfile())>Visit profile</button>
                <button type="button" class="btn btn-primary btn-block" onclick=@(() => OfferDeal())>Offer a deal</button>
            </div>
        </div>

        <div class="col-sm-9">
            <GameDetails Game="GameView" />
            <UserGameDetails UserGame="UserGameView" />
        </div>
    </div>
</div>

@functions {
    [Parameter]
    string UserGameId { get; set; }
    GameView GameView { get; set; } = new GameView();
    UserGameDto UserGameView { get; set; } = new UserGameDto();
    UserView gameOwner { get; set; } = new UserView();
    bool contactDetailsVisible = false;
    string contactDetailsButton = "Show contact details";

    protected override async Task OnInitAsync()
    {
        appState.TrySetAccessTokens();
        UserGameView = await Http.GetJsonAsync<UserGameDto>("http://localhost:5000/api/users/game/" + UserGameId);
        GameView = await Http.GetJsonAsync<GameView>("http://localhost:5000/api/games/getview/" + UserGameView.GameId);

        if (appState.IsUserLoggedIn)
        {
            var loggedUserId = await Http.GetJsonAsync<int>("http://localhost:5000/api/users/id");
            if (UserGameView.UserId == loggedUserId)
                UriHelper.NavigateTo($"/editableexchangegame/{UserGameId}");
        }

        gameOwner = await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/" + UserGameView.UserId);
    }

    private void ToogleContactDetails()
    {
        if (contactDetailsVisible)
        {
            contactDetailsVisible = false;
            contactDetailsButton = "Show contact details";
        }
        else
        {
            contactDetailsVisible = true;
            contactDetailsButton = "Hide contact details";
        }
    }

    private void OfferDeal()
    {
        UriHelper.NavigateTo($"/offerdeal/{gameOwner.UserId}");
    }

    private void VisitProfile()
    {
        UriHelper.NavigateTo($"/profile/{gameOwner.UserId}");
    }
}
