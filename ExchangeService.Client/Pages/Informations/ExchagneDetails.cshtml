@using ExchangeService.Shared.Resources;
@using ExchangeService.Shared.Enums;
@using ExchangeService.Client.Services;
@page "/exchangedetails/{ExchangeId}"
@inject HttpClient Http
@inject TokenService tokenService
@inject AppState appState
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

@if (Exchange == null || MyProfile == null || OtherUser == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-sm-3">
                <ProfileDetails Profile="MyProfile" />
            </div>
            <div class="col-sm-6">
                <br/>
                     <div class="alert alert-secondary" style="background-color:#f2f2f3" role="alert">
                         <br />
                         <div class="row justify-content-center">
                             <div class="col-sm-6">
                                 <p class="font-weight-bold"> Games you give away: </p>
                                 @foreach (var gameId in Exchange.MyGamesIds)
                                 {
                                     <p>@games.SingleOrDefault(g => g.Id == Int32.Parse(gameId)).Name</p>
                                 }
                             </div>
                             <div class="col-sm-6">
                                 <p class="font-weight-bold"> Games you get: </p>
                                 @foreach (var gameId in Exchange.OtherUserGamesIds)
                                 {
                                     <p>@games.SingleOrDefault(g => g.Id == Int32.Parse(gameId)).Name</p>
                                 }
                             </div>
                         </div>
                         <br /><br />
                         <div class="row justify-content-center">
                             <div class="col-sm-6">
                                 <p class="font-weight-bold">Type of exchange: </p>
                                 <p>@Exchange.Shipment</p>
                             </div>
                             <div class="col-sm-6">
                                 @if (Exchange.Shipment == Shipment.Delivery)
                                 {
                                     <p class="font-weight-bold">Your delivery adress:</p>
                                     <p class="font-italic">@Exchange.MyContactInfo</p>

                                     <p class="font-weight-bold">Other user delivery adress:</p>
                                     <p class="font-italic">@Exchange.OtherUserContactInfo</p>
                                 }
                                 else
                                 {
                                     <p class="font-weight-bold">Your contact details:</p>
                                     <p class="font-italic">@Exchange.MyContactInfo</p>

                                     <p class="font-weight-bold">Other user contact details:</p>
                                     <p class="font-italic">@Exchange.OtherUserContactInfo</p>
                                 }
                             </div>
                         </div>
                     </div>
            </div>
            <div class="col-sm-3">
                <ProfileDetails Profile="OtherUser" />
            </div>
        </div>
        <div class="row">
            <br />
            <br />
            <br />
            <div class="col-sm-3">
                <a role="button" class="btn btn-secondary btn-block" href="/myexchanges">Back to exchanges</a>
            </div>
        </div>
    </div>
}

@functions{
    [Parameter]
    string ExchangeId { get; set; }
    ExchangeDto Exchange { get; set; }
    UserView MyProfile { get; set; }
    UserView OtherUser { get; set; }
    DropDownItem[] games;

    protected override async Task OnInitAsync()
    {
        appState.TrySetAccessTokens();
        MyProfile = await appState.GetMyProfile();
        Exchange = await Http.GetJsonAsync<ExchangeDto>("http://localhost:5000/api/users/exchange/" + ExchangeId);
        OtherUser = await Http.GetJsonAsync<UserView>("http://localhost:5000/api/users/" + Exchange.OtherUserId);
        games = await Http.GetJsonAsync<DropDownItem[]>("http://localhost:5000/api/games/");
    }
}

